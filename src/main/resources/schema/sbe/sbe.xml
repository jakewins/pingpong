<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sbe:messageSchema xmlns:sbe="http://www.fixprotocol.org/ns/simple/1.0"
                   package="baseline"
                   id="1"
                   version="0"
                   semanticVersion="5.2"
                   description="Code generation unit test support"
                   byteOrder="littleEndian">
    <types>
        <composite name="messageHeader" description="Message identifiers and length of message root">
            <type name="blockLength" primitiveType="uint16"/>
            <type name="templateId" primitiveType="uint16"/>
            <type name="schemaId" primitiveType="uint16"/>
            <type name="version" primitiveType="uint16"/>
        </composite>
        <composite name="groupSizeEncoding" description="Repeating group dimensions">
            <type name="blockLength" primitiveType="uint16"/>
            <type name="numInGroup" primitiveType="uint8"/>
        </composite>
        <composite name="varDataEncoding">
            <type name="length" primitiveType="uint8"/>
            <type name="varData" primitiveType="uint8" length="0" characterEncoding="UTF-8"/>
        </composite>
    </types>
    <sbe:message name="SimpleMessage" id="1" description="Message containing only the message id">
        <field name="id" id="1" type="uint64"/>
    </sbe:message>

    <sbe:message name="Statement" id="2" description="Message containing a statement">
        <field name="id" id="1" type="uint64"/>
        <group name="params" id="2" dimensionType="groupSizeEncoding">
            <!--A this point, I'm taking a break from SBE - its awesome for small simple messages, but for these
                messages that contain arbitrary maps.. its very restrictive. Since strings cannot be in groups, and
                since strings need to be at the end of messages, it becomes very odd to serialize collections and other
                more complex structures. -->
            <field name="param" id="3" type="uint64" />
        </group>
        <data name="query" id="4" type="varDataEncoding" />
    </sbe:message>


</sbe:messageSchema>